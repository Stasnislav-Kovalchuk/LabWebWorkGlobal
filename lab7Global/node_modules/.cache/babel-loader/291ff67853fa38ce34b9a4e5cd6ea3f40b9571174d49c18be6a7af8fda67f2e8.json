{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavkovalcuk/Downloads/web-lab-lab7/src/components/features/SectionMenu/SectionMenu.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// import searchIcon from '../../../images/search_button.svg';\n// import deleteIcon from '../../../images/clear_button.svg';\nimport './SectionMenu.scss';\nimport { defaultDoctor } from \"../../../intefaces/doctorInterfaces\";\nimport PopUpModalWindow from \"../../common/PopUpModalWindow/PopUpModalWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectionMenu = ({\n  doctors,\n  setDoctors,\n  setSearchOptions\n}) => {\n  _s();\n  const [active, setActive] = useState(false);\n  const [newDoctor, setNewDoctor] = useState(defaultDoctor);\n  const [error, setError] = useState('');\n  const handleNewDoctor = e => {\n    e.preventDefault();\n    if (!newDoctor.name || !newDoctor.description || !newDoctor.price || !newDoctor.picture) {\n      setError('All fields are required');\n      return;\n    }\n    const isNameUnique = !doctors.some(doctor => doctor.name === newDoctor.name);\n    if (!isNameUnique) {\n      setError('Doctor name must be unique');\n      return;\n    }\n    const maxId = doctors.length > 0 ? Math.max(...doctors.map(doctor => doctor.doctor_id)) : 0;\n    setDoctors([...doctors, {\n      ...newDoctor,\n      doctor_id: maxId + 1\n    }]);\n    setActive(false);\n    setError('');\n    setNewDoctor(defaultDoctor);\n    console.log(newDoctor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-button\",\n        onClick: () => setActive(true),\n        children: \"Create a doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-menu\",\n      id: \"search-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-buttons-menu\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Type something...\",\n            onChange: e => setSearchOptions(prev => ({\n              ...prev,\n              term: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopUpModalWindow, {\n      headText: 'Add new doctor',\n      active: active,\n      setActive: setActive,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"doctor-popup-form\",\n        onSubmit: handleNewDoctor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newDoctor.name,\n            onChange: e => setNewDoctor({\n              ...newDoctor,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newDoctor.description,\n            onChange: e => setNewDoctor({\n              ...newDoctor,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 0,\n            value: newDoctor.price || '',\n            onChange: e => setNewDoctor({\n              ...newDoctor,\n              price: Number(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Picture's url:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newDoctor.picture,\n            onChange: e => setNewDoctor({\n              ...newDoctor,\n              picture: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'blue-btn small',\n          type: 'submit',\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(SectionMenu, \"MI3EhjtFjcwQrwlytjCTm7379YQ=\");\n_c = SectionMenu;\nexport default SectionMenu;\nvar _c;\n$RefreshReg$(_c, \"SectionMenu\");","map":{"version":3,"names":["React","useState","defaultDoctor","PopUpModalWindow","jsxDEV","_jsxDEV","SectionMenu","doctors","setDoctors","setSearchOptions","_s","active","setActive","newDoctor","setNewDoctor","error","setError","handleNewDoctor","e","preventDefault","name","description","price","picture","isNameUnique","some","doctor","maxId","length","Math","max","map","doctor_id","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onChange","prev","term","target","value","headText","onSubmit","type","min","Number","_c","$RefreshReg$"],"sources":["/Users/stanislavkovalcuk/Downloads/web-lab-lab7/src/components/features/SectionMenu/SectionMenu.tsx"],"sourcesContent":["import React, {Dispatch, FC, FormEvent, useState} from 'react';\n\n// import searchIcon from '../../../images/search_button.svg';\n// import deleteIcon from '../../../images/clear_button.svg';\nimport './SectionMenu.scss';\nimport {defaultDoctor, IDoctor} from \"../../../intefaces/doctorInterfaces\";\nimport PopUpModalWindow from \"../../common/PopUpModalWindow/PopUpModalWindow\";\n\ninterface SectionMenuProps {\n    doctors: IDoctor[];\n    setDoctors: Dispatch<React.SetStateAction<IDoctor[]>>;\n    setSearchOptions: Dispatch<React.SetStateAction<{term: string, sort: string}>>;\n}\n\n\nconst SectionMenu: FC<SectionMenuProps> = ({doctors, setDoctors, setSearchOptions}) => {\n    const [active, setActive] = useState<boolean>(false);\n    const [newDoctor, setNewDoctor] = useState<IDoctor>(defaultDoctor);\n    const [error, setError] = useState<string>('')\n\n    const handleNewDoctor = (e: FormEvent) => {\n        e.preventDefault();\n        if (!newDoctor.name || !newDoctor.description || !newDoctor.price || !newDoctor.picture) {\n            setError('All fields are required');\n            return;\n        }\n\n        const isNameUnique = !doctors.some(doctor => doctor.name === newDoctor.name);\n        if (!isNameUnique) {\n            setError('Doctor name must be unique');\n            return;\n        }\n\n        const maxId = doctors.length > 0 ? Math.max(...doctors.map(doctor => doctor.doctor_id)) : 0;\n        setDoctors([...doctors, {...newDoctor, doctor_id: maxId + 1}]);\n        setActive(false);\n        setError('');\n        setNewDoctor(defaultDoctor);\n\n        console.log(newDoctor);\n    }\n\n    return (\n        <section className=\"section-menu\">\n            <div className=\"create\">\n                <button className=\"create-button\" onClick={() => setActive(true)}>Create a doctor</button>\n            </div>\n            <div className=\"search-menu\" id=\"search-menu\">\n                <form>\n                    <label className=\"input-buttons-menu\">\n                        <input placeholder=\"Type something...\"\n                               onChange={(e) => setSearchOptions(prev => ({...prev, term: e.target.value}))}\n                        />\n                        {/*<label className=\"buttons-menu\">*/}\n                        {/*    <button type=\"submit\" className=\"search\"><span>Search</span><img*/}\n                        {/*        src={searchIcon} alt=\"Search\"/></button>*/}\n                        {/*    <button type=\"reset\" className=\"clear\"><span>Clear</span><img*/}\n                        {/*        src={deleteIcon} alt=\"Clear\"/></button>*/}\n                        {/*</label>*/}\n                    </label>\n                </form>\n            </div>\n\n            <PopUpModalWindow headText={'Add new doctor'} active={active} setActive={setActive}>\n                <form className='doctor-popup-form' onSubmit={handleNewDoctor}>\n                    <div>\n                        <label>Name:</label>\n                        <input\n                            value={newDoctor.name}\n                            onChange={e => setNewDoctor({...newDoctor, name: e.target.value})}\n                        />\n                    </div>\n                    <div>\n                        <label>Description:</label>\n                        <textarea\n                            value={newDoctor.description}\n                            onChange={e => setNewDoctor({...newDoctor, description: e.target.value})}\n                        />\n                    </div>\n                    <div>\n                        <label>Price:</label>\n                        <input\n                            type={\"number\"}\n                            min={0}\n                            value={newDoctor.price || ''}\n                            onChange={e => setNewDoctor({...newDoctor, price: Number(e.target.value)})}\n                        />\n                    </div>\n                    <div>\n                        <label>Picture's url:</label>\n                        <input\n                            value={newDoctor.picture}\n                            onChange={e => setNewDoctor({...newDoctor, picture: e.target.value})}\n                        />\n                    </div>\n                    <span className='error'>{error}</span>\n                    <button className={'blue-btn small'} type={'submit'}>Добавити</button>\n                </form>\n            </PopUpModalWindow>\n\n        </section>\n    );\n};\n\nexport default SectionMenu;"],"mappings":";;AAAA,OAAOA,KAAK,IAA4BC,QAAQ,QAAO,OAAO;;AAE9D;AACA;AACA,OAAO,oBAAoB;AAC3B,SAAQC,aAAa,QAAgB,qCAAqC;AAC1E,OAAOC,gBAAgB,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS9E,MAAMC,WAAiC,GAAGA,CAAC;EAACC,OAAO;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EACpD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAUC,aAAa,CAAC;EAClE,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMgB,eAAe,GAAIC,CAAY,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,SAAS,CAACO,IAAI,IAAI,CAACP,SAAS,CAACQ,WAAW,IAAI,CAACR,SAAS,CAACS,KAAK,IAAI,CAACT,SAAS,CAACU,OAAO,EAAE;MACrFP,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACJ;IAEA,MAAMQ,YAAY,GAAG,CAACjB,OAAO,CAACkB,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACN,IAAI,KAAKP,SAAS,CAACO,IAAI,CAAC;IAC5E,IAAI,CAACI,YAAY,EAAE;MACfR,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACJ;IAEA,MAAMW,KAAK,GAAGpB,OAAO,CAACqB,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGvB,OAAO,CAACwB,GAAG,CAACL,MAAM,IAAIA,MAAM,CAACM,SAAS,CAAC,CAAC,GAAG,CAAC;IAC3FxB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAC,GAAGM,SAAS;MAAEmB,SAAS,EAAEL,KAAK,GAAG;IAAC,CAAC,CAAC,CAAC;IAC9Df,SAAS,CAAC,KAAK,CAAC;IAChBI,QAAQ,CAAC,EAAE,CAAC;IACZF,YAAY,CAACZ,aAAa,CAAC;IAE3B+B,OAAO,CAACC,GAAG,CAACrB,SAAS,CAAC;EAC1B,CAAC;EAED,oBACIR,OAAA;IAAS8B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC7B/B,OAAA;MAAK8B,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnB/B,OAAA;QAAQ8B,SAAS,EAAC,eAAe;QAACE,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAAC,IAAI,CAAE;QAAAwB,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC,eACNpC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAACO,EAAE,EAAC,aAAa;MAAAN,QAAA,eACzC/B,OAAA;QAAA+B,QAAA,eACI/B,OAAA;UAAO8B,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjC/B,OAAA;YAAOsC,WAAW,EAAC,mBAAmB;YAC/BC,QAAQ,EAAG1B,CAAC,IAAKT,gBAAgB,CAACoC,IAAI,KAAK;cAAC,GAAGA,IAAI;cAAEC,IAAI,EAAE5B,CAAC,CAAC6B,MAAM,CAACC;YAAK,CAAC,CAAC;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENpC,OAAA,CAACF,gBAAgB;MAAC8C,QAAQ,EAAE,gBAAiB;MAACtC,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAAAwB,QAAA,eAC/E/B,OAAA;QAAM8B,SAAS,EAAC,mBAAmB;QAACe,QAAQ,EAAEjC,eAAgB;QAAAmB,QAAA,gBAC1D/B,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,EAAO;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBpC,OAAA;YACI2C,KAAK,EAAEnC,SAAS,CAACO,IAAK;YACtBwB,QAAQ,EAAE1B,CAAC,IAAIJ,YAAY,CAAC;cAAC,GAAGD,SAAS;cAAEO,IAAI,EAAEF,CAAC,CAAC6B,MAAM,CAACC;YAAK,CAAC;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpC,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,EAAO;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3BpC,OAAA;YACI2C,KAAK,EAAEnC,SAAS,CAACQ,WAAY;YAC7BuB,QAAQ,EAAE1B,CAAC,IAAIJ,YAAY,CAAC;cAAC,GAAGD,SAAS;cAAEQ,WAAW,EAAEH,CAAC,CAAC6B,MAAM,CAACC;YAAK,CAAC;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpC,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,EAAO;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBpC,OAAA;YACI8C,IAAI,EAAE,QAAS;YACfC,GAAG,EAAE,CAAE;YACPJ,KAAK,EAAEnC,SAAS,CAACS,KAAK,IAAI,EAAG;YAC7BsB,QAAQ,EAAE1B,CAAC,IAAIJ,YAAY,CAAC;cAAC,GAAGD,SAAS;cAAES,KAAK,EAAE+B,MAAM,CAACnC,CAAC,CAAC6B,MAAM,CAACC,KAAK;YAAC,CAAC;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpC,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,EAAO;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7BpC,OAAA;YACI2C,KAAK,EAAEnC,SAAS,CAACU,OAAQ;YACzBqB,QAAQ,EAAE1B,CAAC,IAAIJ,YAAY,CAAC;cAAC,GAAGD,SAAS;cAAEU,OAAO,EAAEL,CAAC,CAAC6B,MAAM,CAACC;YAAK,CAAC;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpC,OAAA;UAAM8B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAErB;QAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtCpC,OAAA;UAAQ8B,SAAS,EAAE,gBAAiB;UAACgB,IAAI,EAAE,QAAS;UAAAf,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEd,CAAC;AAElB,CAAC;AAAC/B,EAAA,CAvFIJ,WAAiC;AAAAgD,EAAA,GAAjChD,WAAiC;AAyFvC,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}