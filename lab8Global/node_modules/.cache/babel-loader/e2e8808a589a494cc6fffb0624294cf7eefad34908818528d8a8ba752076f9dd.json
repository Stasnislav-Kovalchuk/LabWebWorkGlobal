{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavkovalcuk/Desktop/github/LabWebWorkGlobal/lab8Global/src/components/features/SectionItems/SectionItems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SectionItems.scss';\nimport { defaultDoctor } from \"../../../intefaces/doctorInterfaces\";\nimport DoctorItem from \"../../entities/DoctorItem/DoctorItem\";\nimport PopUpDoctorForm from '../../entities/PopUpDoctorForm/PopUpDoctorForm';\nimport { useDoctors } from '../../context/DoctorsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterDoctorsBySearchOptions = (doctors, searchOptions) => {\n  const {\n    term,\n    sort\n  } = searchOptions;\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().trim().includes(term.toLowerCase().trim()) || doctor.description.toLowerCase().trim().includes(term.toLowerCase().trim()));\n  return filteredDoctors.sort((a, b) => {\n    if (sort === 'price') {\n      return a.price - b.price;\n    } else if (sort === 'name') {\n      return a.name.localeCompare(b.name);\n    }\n    return 0;\n  });\n};\nconst SectionItems = ({\n  doctors\n}) => {\n  _s();\n  const {\n    setDoctors,\n    searchOptions,\n    setSearchOptions\n  } = useDoctors();\n  const [active, setActive] = useState(false);\n  const [editedDoctor, setEditedDoctor] = useState(defaultDoctor);\n  const [error, setError] = useState('');\n  const [visibleDoctors, setVisibleDoctors] = useState(3);\n  const handleEditDoctor = e => {\n    e.preventDefault();\n    if (!editedDoctor.name || !editedDoctor.description || !editedDoctor.price || !editedDoctor.picture) {\n      setError('All fields are required');\n      return;\n    }\n    const updatedDoctors = doctors.map(doctor => doctor.doctor_id === editedDoctor.doctor_id ? editedDoctor : doctor);\n    setDoctors(updatedDoctors);\n    setActive(false);\n    setError('');\n    setEditedDoctor(defaultDoctor);\n  };\n  const handleLoadMore = () => {\n    setVisibleDoctors(prevVisible => prevVisible + 3);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-items\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"sort\",\n        id: \"sort\",\n        onChange: e => setSearchOptions(prev => ({\n          ...prev,\n          sort: e.target.value\n        })),\n        value: searchOptions.sort,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Sort by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rating\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: doctors.slice(0, visibleDoctors).map(doctor => /*#__PURE__*/_jsxDEV(DoctorItem, {\n        doctor: doctor,\n        setDoctors: setDoctors,\n        setEditedDoctor: setEditedDoctor,\n        setActive: setActive\n      }, doctor.doctor_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), visibleDoctors < doctors.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"load-more-btn\",\n      onClick: handleLoadMore,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"load-more-text\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"load-more-icon\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PopUpDoctorForm, {\n      doctor: editedDoctor,\n      setDoctor: setEditedDoctor,\n      handleSubmit: handleEditDoctor,\n      error: error,\n      headText: \"Edit doctor\",\n      active: active,\n      setActive: setActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(SectionItems, \"ewk7d+VvozEOYCtejAFDieaxOLc=\", false, function () {\n  return [useDoctors];\n});\n_c = SectionItems;\nexport default SectionItems;\nvar _c;\n$RefreshReg$(_c, \"SectionItems\");","map":{"version":3,"names":["React","useState","defaultDoctor","DoctorItem","PopUpDoctorForm","useDoctors","jsxDEV","_jsxDEV","filterDoctorsBySearchOptions","doctors","searchOptions","term","sort","filteredDoctors","filter","doctor","name","toLowerCase","trim","includes","description","a","b","price","localeCompare","SectionItems","_s","setDoctors","setSearchOptions","active","setActive","editedDoctor","setEditedDoctor","error","setError","visibleDoctors","setVisibleDoctors","handleEditDoctor","e","preventDefault","picture","updatedDoctors","map","doctor_id","handleLoadMore","prevVisible","className","children","id","onChange","prev","target","value","fileName","_jsxFileName","lineNumber","columnNumber","slice","length","onClick","setDoctor","handleSubmit","headText","_c","$RefreshReg$"],"sources":["/Users/stanislavkovalcuk/Desktop/github/LabWebWorkGlobal/lab8Global/src/components/features/SectionItems/SectionItems.tsx"],"sourcesContent":["import React, { FC, FormEvent, useState, useEffect } from 'react';\nimport './SectionItems.scss';\nimport { defaultDoctor, IDoctor } from \"../../../intefaces/doctorInterfaces\";\nimport DoctorItem from \"../../entities/DoctorItem/DoctorItem\";\nimport PopUpModalWindow from \"../../common/PopUpModalWindow/PopUpModalWindow\";\nimport PopUpDoctorForm from '../../entities/PopUpDoctorForm/PopUpDoctorForm';\nimport { useDoctors } from '../../context/DoctorsContext';\n\ninterface SectionItemsProps {\n    doctors: IDoctor[];\n}\n\nconst filterDoctorsBySearchOptions = (doctors: IDoctor[], searchOptions: {term: string, sort: string}) => {\n    const { term, sort } = searchOptions;\n\n    const filteredDoctors = doctors.filter(doctor =>\n        doctor.name.toLowerCase().trim().includes(term.toLowerCase().trim()) ||\n        doctor.description.toLowerCase().trim().includes(term.toLowerCase().trim())\n    );\n\n    return filteredDoctors.sort((a, b) => {\n        if (sort === 'price') {\n            return a.price - b.price;\n        } else if (sort === 'name') {\n            return a.name.localeCompare(b.name);\n        }\n        return 0;\n    });\n};\n\nconst SectionItems: FC<SectionItemsProps> = ({ doctors }) => {\n    const { setDoctors, searchOptions, setSearchOptions } = useDoctors();\n    const [active, setActive] = useState(false);\n    const [editedDoctor, setEditedDoctor] = useState<IDoctor>(defaultDoctor);\n    const [error, setError] = useState('');\n    const [visibleDoctors, setVisibleDoctors] = useState(3);\n\n    const handleEditDoctor = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!editedDoctor.name || !editedDoctor.description || !editedDoctor.price || !editedDoctor.picture) {\n            setError('All fields are required');\n            return;\n        }\n\n        const updatedDoctors = doctors.map(doctor =>\n            doctor.doctor_id === editedDoctor.doctor_id ? editedDoctor : doctor\n        );\n        setDoctors(updatedDoctors);\n        setActive(false);\n        setError('');\n        setEditedDoctor(defaultDoctor);\n    };\n\n    const handleLoadMore = () => {\n        setVisibleDoctors(prevVisible => prevVisible + 3);\n    };\n\n    return (\n        <section className=\"section-items\">\n            <div className=\"sort\">\n                <select\n                    name=\"sort\" \n                    id=\"sort\" \n                    onChange={(e) => setSearchOptions((prev: typeof searchOptions) => ({\n                        ...prev,\n                        sort: e.target.value\n                    }))}\n                    value={searchOptions.sort}\n                >\n                    <option value=\"\">Sort by</option>\n                    <option value=\"price\">Price</option>\n                    <option value=\"rating\">Rating</option>\n                </select>\n            </div>\n            <div className=\"items\">\n                {doctors.slice(0, visibleDoctors).map((doctor) => (\n                    <DoctorItem\n                        key={doctor.doctor_id}\n                        doctor={doctor}\n                        setDoctors={setDoctors}\n                        setEditedDoctor={setEditedDoctor}\n                        setActive={setActive}\n                    />\n                ))}\n            </div>\n            {visibleDoctors < doctors.length && (\n                <button className=\"load-more-btn\" onClick={handleLoadMore}>\n                    <span className=\"load-more-text\">Load More</span>\n                    <span className=\"load-more-icon\">+</span>\n                </button>\n            )}\n            <PopUpDoctorForm\n                doctor={editedDoctor}\n                setDoctor={setEditedDoctor}\n                handleSubmit={handleEditDoctor}\n                error={error}\n                headText=\"Edit doctor\"\n                active={active}\n                setActive={setActive}\n            />\n        </section>\n    );\n};\n\nexport default SectionItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}