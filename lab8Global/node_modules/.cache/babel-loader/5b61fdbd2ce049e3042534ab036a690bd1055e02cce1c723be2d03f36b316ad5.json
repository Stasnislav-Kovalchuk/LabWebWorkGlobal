{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavkovalcuk/Desktop/github/LabWebWorkGlobal/lab8Global/src/components/context/DoctorsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport doctorsData from '../../data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flattenedDoctorsData = doctorsData.flat().map(doctor => ({\n  ...doctor,\n  rating: 5,\n  location: 'Ukraine'\n}));\nconst DoctorsContext = /*#__PURE__*/createContext(undefined);\nexport const useDoctors = () => {\n  _s();\n  const context = useContext(DoctorsContext);\n  if (!context) {\n    throw new Error('useDoctors must be used within a DoctorsProvider');\n  }\n  return context;\n};\n_s(useDoctors, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DoctorsProvider = ({\n  children\n}) => {\n  _s2();\n  const [doctors, setDoctors] = useState(flattenedDoctorsData);\n  const [filters, setFilters] = useState({\n    price: 0,\n    rating: 0,\n    country: '',\n    term: ''\n  });\n  const [filteredDoctors, setFilteredDoctors] = useState(doctors);\n  useEffect(() => {\n    const newFilteredDoctors = doctors.filter(doctor => {\n      const matchesPrice = !filters.price || doctor.price <= filters.price;\n      const matchesRating = !filters.rating || doctor.rating >= filters.rating;\n      const matchesCountry = !filters.country || doctor.location.toLowerCase() === filters.country.toLowerCase();\n      const matchesTerm = !filters.term || doctor.name.toLowerCase().includes(filters.term.toLowerCase()) || doctor.description.toLowerCase().includes(filters.term.toLowerCase());\n      return matchesPrice && matchesRating && matchesCountry && matchesTerm;\n    });\n    setFilteredDoctors(newFilteredDoctors);\n  }, [doctors, filters]);\n  return /*#__PURE__*/_jsxDEV(DoctorsContext.Provider, {\n    value: {\n      doctors,\n      setDoctors,\n      filters,\n      setFilters,\n      filteredDoctors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s2(DoctorsProvider, \"TOX6p4AmQdTsTwUnFHcWNipFZpY=\");\n_c = DoctorsProvider;\nvar _c;\n$RefreshReg$(_c, \"DoctorsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","doctorsData","jsxDEV","_jsxDEV","flattenedDoctorsData","flat","map","doctor","rating","location","DoctorsContext","undefined","useDoctors","_s","context","Error","DoctorsProvider","children","_s2","doctors","setDoctors","filters","setFilters","price","country","term","filteredDoctors","setFilteredDoctors","newFilteredDoctors","filter","matchesPrice","matchesRating","matchesCountry","toLowerCase","matchesTerm","name","includes","description","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stanislavkovalcuk/Desktop/github/LabWebWorkGlobal/lab8Global/src/components/context/DoctorsContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, FC, ReactNode, useEffect } from 'react';\nimport { IDoctor } from \"../../interfaces/doctorInterfaces\";\nimport doctorsData from '../../data.json';\n\nconst flattenedDoctorsData: IDoctor[] = doctorsData.flat().map(doctor => ({\n    ...doctor,\n    rating: 5,\n    location: 'Ukraine'\n}));\n\nexport interface Filters {\n    price: number;\n    rating: number;\n    country: string;\n    term: string;\n}\n\ninterface DoctorsContextProps {\n    doctors: IDoctor[];\n    setDoctors: React.Dispatch<React.SetStateAction<IDoctor[]>>;\n    filters: Filters;\n    setFilters: React.Dispatch<React.SetStateAction<Filters>>;\n    filteredDoctors: IDoctor[];\n}\n\nconst DoctorsContext = createContext<DoctorsContextProps | undefined>(undefined);\n\nexport const useDoctors = () => {\n    const context = useContext(DoctorsContext);\n    if (!context) {\n        throw new Error('useDoctors must be used within a DoctorsProvider');\n    }\n    return context;\n};\n\nexport const DoctorsProvider: FC<{ children: ReactNode }> = ({ children }) => {\n    const [doctors, setDoctors] = useState<IDoctor[]>(flattenedDoctorsData);\n    const [filters, setFilters] = useState<Filters>({ price: 0, rating: 0, country: '', term: '' });\n    const [filteredDoctors, setFilteredDoctors] = useState<IDoctor[]>(doctors);\n\n    useEffect(() => {\n        const newFilteredDoctors = doctors.filter(doctor => {\n            const matchesPrice = !filters.price || doctor.price <= filters.price;\n            const matchesRating = !filters.rating || doctor.rating >= filters.rating;\n            const matchesCountry = !filters.country || doctor.location.toLowerCase() === filters.country.toLowerCase();\n            const matchesTerm = !filters.term || doctor.name.toLowerCase().includes(filters.term.toLowerCase()) || doctor.description.toLowerCase().includes(filters.term.toLowerCase());\n            return matchesPrice && matchesRating && matchesCountry && matchesTerm;\n        });\n        setFilteredDoctors(newFilteredDoctors);\n    }, [doctors, filters]);\n\n    return (\n        <DoctorsContext.Provider value={{ doctors, setDoctors, filters, setFilters, filteredDoctors }}>\n            {children}\n        </DoctorsContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAiBC,SAAS,QAAQ,OAAO;AAE5F,OAAOC,WAAW,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,oBAA+B,GAAGH,WAAW,CAACI,IAAI,CAAC,CAAC,CAACC,GAAG,CAACC,MAAM,KAAK;EACtE,GAAGA,MAAM;EACTC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE;AACd,CAAC,CAAC,CAAC;AAiBH,MAAMC,cAAc,gBAAGb,aAAa,CAAkCc,SAAS,CAAC;AAEhF,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGhB,UAAU,CAACY,cAAc,CAAC;EAC1C,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,UAAU;AAQvB,OAAO,MAAMI,eAA4C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAYK,oBAAoB,CAAC;EACvE,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAU;IAAEwB,KAAK,EAAE,CAAC;IAAEf,MAAM,EAAE,CAAC;IAAEgB,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC/F,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAYoB,OAAO,CAAC;EAE1EnB,SAAS,CAAC,MAAM;IACZ,MAAM4B,kBAAkB,GAAGT,OAAO,CAACU,MAAM,CAACtB,MAAM,IAAI;MAChD,MAAMuB,YAAY,GAAG,CAACT,OAAO,CAACE,KAAK,IAAIhB,MAAM,CAACgB,KAAK,IAAIF,OAAO,CAACE,KAAK;MACpE,MAAMQ,aAAa,GAAG,CAACV,OAAO,CAACb,MAAM,IAAID,MAAM,CAACC,MAAM,IAAIa,OAAO,CAACb,MAAM;MACxE,MAAMwB,cAAc,GAAG,CAACX,OAAO,CAACG,OAAO,IAAIjB,MAAM,CAACE,QAAQ,CAACwB,WAAW,CAAC,CAAC,KAAKZ,OAAO,CAACG,OAAO,CAACS,WAAW,CAAC,CAAC;MAC1G,MAAMC,WAAW,GAAG,CAACb,OAAO,CAACI,IAAI,IAAIlB,MAAM,CAAC4B,IAAI,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACf,OAAO,CAACI,IAAI,CAACQ,WAAW,CAAC,CAAC,CAAC,IAAI1B,MAAM,CAAC8B,WAAW,CAACJ,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACf,OAAO,CAACI,IAAI,CAACQ,WAAW,CAAC,CAAC,CAAC;MAC5K,OAAOH,YAAY,IAAIC,aAAa,IAAIC,cAAc,IAAIE,WAAW;IACzE,CAAC,CAAC;IACFP,kBAAkB,CAACC,kBAAkB,CAAC;EAC1C,CAAC,EAAE,CAACT,OAAO,EAAEE,OAAO,CAAC,CAAC;EAEtB,oBACIlB,OAAA,CAACO,cAAc,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEpB,OAAO;MAAEC,UAAU;MAAEC,OAAO;MAAEC,UAAU;MAAEI;IAAgB,CAAE;IAAAT,QAAA,EACzFA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAACzB,GAAA,CArBWF,eAA4C;AAAA4B,EAAA,GAA5C5B,eAA4C;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}